---
title: "Linear modelling in ecology"
bibliography: references.bib
execute: 
  freeze: auto
output: 
  html_document:
   toc: true
   toc_float: true
---

This chapter is a simple example using R

You can import R package using the code

```{r}
library(tidyverse)
```


and then describe the purpose of your chapter as well as executing R command.


For example a basic summary of a dataset is given by 

```{r}
df <- read.table("https://gist.githubusercontent.com/slopp/ce3b90b9168f2f921784de84fa445651/raw/4ecf3041f0ed4913e7c230758733948bc561f434/penguins.csv", sep = "," , header = TRUE)
```

and produce a graph

```{r}
df %>% ggplot() +
	aes(x=species, y = body_mass_g) +
	geom_boxplot()  
```


A citation @bauer2023writing

Au sein de chaque groupe, on peut créer des branches pour répartir le travail de rédaction.

Intro #Fanny

I. Modèles linéaires généraux
1) ANOVA #Clément
2) ANCOVA #Lucia


fwbdxfv 
3) Régression #Fanny


blabla bla 

4) Validation des modèles #Lucia

II. Modèles linéaires généralisés
1) Loi binômiale #Sarah

Reminders :

X is a binary variable with two modalities : 1 (success) and 0 (failure).
The probability of success is :
$$ P(X = 1) = \pi $$
Then, Y, a variable corresponding to N randoms and independent draws of X, follows a binomial law :  
Y ~ B(N,pi)

The density function of Y is : 
$$ f(y;\pi)=\binom{N}{y}.\pi^{y}.(1-\pi)^{(N-y)}$$
The expectancy and the variance of Y are : 
$$E(Y)=N.\pi\:\:\:\:\:\:\:\:\:\:\:\:\:\:\:\:\:var(Y)=N.\pi.(1-\pi)$$

In the generalized model, the link function for Y is the function "logit" such that : 
$$logit(\mu_{y})= \alpha+ \beta_{1}.X{i1}+ \beta_{2}.X{i2}+\beta_{3}.X{i3}+...\beta_{p}.X{ip} = \eta $$
Thus, the predicted value is : 
$$\mu_{y}= \frac {e^{\eta}}{1+e^{\eta}} $$
Let's apply this on the example of the dataset "badger.txt" from the book: Zuur et al. 2009 "Mixed effects models and extensions in ecology with R" - Springer. First, let's import the needed librairies : 

```{=html}
<style>
body {
text-align: justify}
</style>
```
```{r init, include=FALSE}
library(MASS)# to Perform a GLM
library(rcompanion)# Model pseudo R²
```

This dataset comes from a survey carried out on 36 farms in South-West England over 8 consecutive seasons running from autumn 2003 to summer 2005. It contains 277 rows and the columns : 
-	**year**: Calendar year  
- **season**: spring, summer, autumn, winter  
- **farm_code**: farm identifier  
- **survey**: which of the 8 survey occasions (i.e. a time indicator)  
- **badger_activity**: presence-absence of signs of badgers activity  
- **N_setts_in_fields**: number of badger 'homes' observed  
- **N_buildings**: number of buildings on farm  
- **N_cattle_in_buildings**: number of cattle housed in the building yard  
- **accessible_feed_store_present**: presence-absence of a feed's store in farm  
- **accessible_cattle_house_present**: presence-absence of a direct access to cattle house  
- **accessible_feed_present**: presence-absence of accessible feed on farm  
- **grass_silage**: presence-absence of grass_silage  
- **cereal_silage**: presence-absence of cereal_silage  
- **hay_straw**: presence-absence of hay_straw  
- **cereal_grains**: presence-absence of cereal_grains  
- **concentrates**: presence-absence of concentrates  
- **sugar_beet**: presence-absence of sugar beet  
- **molasses**: presence-absence of molasses

For the example, the binary variable that will be explained is the badger activity and any other variables are taken as explanatory variables. 
The objective is to find a model that predict the occurence of signs of badger activity on farms in order to find a way to reduce the rates of badgers' visits to farms. This objective is motivated by the numerous transmissions of bovine tuberculosis from badgers to cattle.

Let's import the dataset and perform a binomial generalized linear model. 

```{r global data, include=TRUE,echo=TRUE}
# Dataset import
dataBadger <- read.table("Badger.txt", dec=".", header = TRUE)

# First, for a question of simplicity we will simplify a few variable names
dataBadger$Activity<- dataBadger$signs_in_yard
dataBadger$N_setts<-dataBadger$N_setts_in_fields
dataBadger$N_cattle<-dataBadger$N_cattle_in_buildings_yard

# Then, we indicate to R which variables are factors 
dataBadger$season<-as.factor(dataBadger$season)
dataBadger$feed_store<-as.factor(dataBadger$accessible_feed_store_present)
dataBadger$cattle_house<-as.factor(dataBadger$accessible_cattle_house_present)
dataBadger$feed<-as.factor(dataBadger$accessible_feed_present)
dataBadger$grass<-as.factor(dataBadger$grass_silage)
dataBadger$cereal<-as.factor(dataBadger$cereal_silage)
dataBadger$straw<-as.factor(dataBadger$hay_straw)
dataBadger$grains<-as.factor(dataBadger$cereal_grains)
dataBadger$concen<-as.factor(dataBadger$concentrates)
dataBadger$sugar<-as.factor(dataBadger$sugar_beet)
dataBadger$molasses<-as.factor(dataBadger$molasses)
str(dataBadger)

# Check for presence of missing values
colSums(is.na(dataBadger))
# There is no missing value.
```

## DATA EXPLORATION
See in the part dedicated to data exploration

## STATISTICAL ANALYSIS

### Model building

We will use a backward selection with the most complete model, considered here, for a question of simplicity, as the model with all the explanatory variables but no interactions.  

```{r fullmodel,include=TRUE}
# Let's define the model with the function "glm" with the family "binomial" and the link function "logit" 
mod1<-glm(Activity~N_setts
              + N_buildings
              + N_cattle
              + season
              + feed_store
              + cattle_house
              + feed
              + grass
              + cereal
              + straw
              + grains
              + concen
              + sugar
              ,data=dataBadger
              ,family=binomial(link=logit))

# We can use then the function drop1 to check the significance
drop1(mod1,test="Chi")
```
Some of the coefficient are not significant because their p values are under 0.05 so we will suppress them and test the new model. 

```{r candidatemodelGLM,include=TRUE}
# Let's write the new model
mod2<-glm(Activity~N_setts
              + N_cattle
              ,data=dataBadger
              ,family=binomial(link=logit))
# Then we check for significance
drop1(mod2,test="Chi")
```

This time, all of the variables are significant. Let's check the coefficient : 

```{r coeffm, ,include=TRUE}
# Coefficients of the model
summary(mod2)
```

The table of coefficients is : 
             Estimate Std. Error z value Pr(>|z|)    
(Intercept) -3.638947   0.408344  -8.911  < 2e-16 ***
N_setts      0.268288   0.042921   6.251 4.09e-10 ***
N_cattle     0.003486   0.001766   1.974   0.0483 *

All the coefficients are significant. 

The candidate model is:
$$  logit(Presence\:of\:badger\:activity) = - 3.64 + 0.27*Number\:of\:Setts\: +\: 0.004* Number\:of\:Cattles $$

### Model explanation

However there is no R² in Generalized Linear Models, we can still calculate a *pseudo R²* to estimate how far the candidate model is from the null model by determining the distance between deviance of the null model and the residual deviance of the candidate model.

```{r deviance, include=TRUE}
# Estimate of deviance explained
(mod2$null.deviance-mod2$deviance)/mod2$null.deviance

# Some others estimates of deviance explained - package 'rcompanion'
nagelkerke(mod2)
```

From these code lines, we deduce that the estimate of deviance explained is 22 %. We found about the same thing with the $Pseudo\:R^2$ estimate (package 'rcompanion'). 

## MODEL VALIDATION: CHECK TO ASSUMPTIONS
See the part dedicated to validation of generalized linear models. 
Nota Bene : For this example, the validation will show a dependency that could be resolved by using a mixed model with "Farm_code" as random factor.
>>>>>>> binomiale

2) Loi de Poisson #Léa
```{r}
#Load R packages
rm(list=ls()) # Properly clear workspace
library(knitr)
opts_chunk$set(echo = FALSE, comment = "", cache = TRUE, fig.align = "center")
library(ggplot2) # graph package
library(DHARMa)# Model diagnosis
library(rcompanion)# Model pseudo R²
library(lattice)# multipanel graphics
library(MASS)
```

II/ Generalized linear models 

  1)	Poisson law
  
Here we will focus on count data. This count data is a positive discrete variable. There are two types of distribution for this type of data. It can follow a Poisson or a Negative Binomial law.  We will first focus on a Poisson law. 

For the Poisson law, we have :  $$ E(y)= Var(y)=\lambda $$

We can write the distribution under a Poisson distribution as follows: 

$$Pr(Y=y)=\frac{e^{-\lambda}.\lambda^y}{y!}$$

$y$ permit to count the number of occurrences and $\lambda$ is the mean and the variance of the Poisson distribution

The link function of the Poisson law in the Generalized Linear model is **log** and can be written like that : 

$$log(\mu_{y})= \alpha+ \beta_{1}.X{i1}+ \beta_{2}.X{i2}+\beta_{3}.X{i3}+...\beta_{p}.X{ip} = \eta $$

By applying the inverse link function to $\eta$, we obtain the predicted values of Y : 
$$\mu_{y}= e^{\alpha+ \beta_{1}.X{i1}+ \beta_{2}.X{i2}+\beta_{3}.X{i3}+...\beta_{p}.X{ip}} = e^{\eta} $$ 
Let’s take an example to illustrate the use of the Poisson law : 

# Example with the Poisson law 

## DATA DESCRIPTION AND OBJECTIVES 

The study of Gotelli and Ellison in 2002 is a good example to apply the Poisson law. It is named “Biogeography at a regional scale: determinants of ants species density in New England bogs and forests”. At each of 22 sites, 25 pitfall traps were set in two 8x8m arrays, one in the center of the bog and one in adjacent upland forest 50 to 500m from the corresponding bog. Traps are treated as 50 independent replicate observations. The data are in the file BogAnts.txt. 

```{r}
# Dataset importation 
ants<-read.table("BogAnts.txt", dec = ".", header = TRUE) 
ants$Location<-as.factor(ants$Location)
str(ants)

# Check for presence of missing values
colSums(is.na(ants))
# There is no missing value.

```

We have 6 variables. The first one gives the site name. Latitude, Area (of the bog) and Elevation are covariates for each site. Location is a qualitative variable (‘Bog’ or ‘Forest’). The response variable is the last one variable (Nsp) which give the number of ant species found in the traps, in other words the ant species richness. 

For this research we can wonder : which continuous or categorical variables drive the species richness of ants in bogs from New England ? 

As said previously, before any analysis, you must explore the data, but we are not going to do this here. 
However, before continuing, we need to transform the variable 'Area', as in the exploration we can see a presence of outliers due to presence of very extensive bogs. We will therefore perform a log-transformation of this covariate. 

```{r}
par(mfrow=c(1,3))
# Bog Area
# Cleveland plot
dotchart(ants$Area,pch=16,col='blue',xlab='Bog Area')
# Histogram
hist(ants$Area,col='blue',xlab="Bog Area",main="")
# Quantile-Quantile plot
qqnorm(ants$Area,pch=16,col='blue',xlab='')
qqline(ants$Area,col='red')
```
```{r}
par(mfrow=c(1,3))

# Log-transformation for the 'Area' variable : 
ants$LogArea<-log(ants$Area)

# Log Bog Area
# Cleveland plot
dotchart(ants$LogArea,pch=16,col='blue',xlab='LogBog Area')
# Histogram
hist(ants$LogArea,col='blue',xlab="LogBog Area",main="")
# Quantile-Quantile plot
qqnorm(ants$LogArea,pch=16,col='blue',xlab='')
qqline(ants$LogArea,col='red')
```

Now we can use the ‘Area’ variable. 

## STATISTICAL ANALYSIS

### Model building

As every model building, we will search for the candidate model by first analysing the full model with all the independent variables and their interactions. Then a backward selection will be used to select the best model based on term significance. Successively, the non-significant interactions are deleted, and then the non-significant main effects. However, a non-significant main effect is deleted only if it is non-significant AND not contained in a significant interaction. 

Here we perform a Poisson generalized linear model with these code lines : 

```{r}
# The model is : 
mod1<-glm(Nsp~ Location
        + Latitude
        + Elevation
        + LogArea
        + Location:Latitude
        + Location:Elevation
        + Location:LogArea
        ,data=ants
        ,family=poisson(link="log"))
# To check the significance
drop1(mod1,test="Chi")
```

Here any interaction is significant. We delete the less significant interaction : Location:Latitude and do this code lines until there are only significant effects. 

```{r}
# The model is : 
mod1<-glm(Nsp~ Location
        + Latitude
        + Elevation
        + LogArea
        + Location:Elevation
        + Location:LogArea
        ,data=ants
        ,family=poisson(link="log"))
# To check the significance
drop1(mod1,test="Chi")
```

The less significant interaction is Location:LogArea. So we delete this interaction and continue. 

```{r}
# The model is : 
mod1<-glm(Nsp~ Location
        + Latitude
        + Elevation
        + LogArea
        + Location:Elevation
        ,data=ants
        ,family=poisson(link="log"))
# To check the significance
drop1(mod1,test="Chi")
```

The less significant interaction is Location:Elevation. So, we delete this interaction and continue. 

```{r}
# The model is : 
mod1<-glm(Nsp~ Location
        + Latitude
        + Elevation
        + LogArea
        ,data=ants
        ,family=poisson(link="log"))
# To check the significance
drop1(mod1,test="Chi")
```

The less significant effect is LogArea. So, we delete this effect and continue. 

```{r}
# The model is : 
mod1<-glm(Nsp~ Location
        + Latitude
        + Elevation
        ,data=ants
        ,family=poisson(link="log"))
# To check the significance
drop1(mod1,test="Chi")
```
Here all the effects are significant. So we can stop the backward selection and conclude with this the selected model: Nsp~Location + Elevation + Latitude 

It is necessary to analyse the coefficients of the model in order to understand how the main effects influence the ant species richness in bogs. 

### Model's coefficients analysis
```{r}
# Coefficients of the model
summary(mod1)
```

So we can write the model like that: 
$$ log(Species\:Richness) = 11.93 + (Location_{Bog} = 0 ;\:Location_{Forest} = +0.63^{***})\:- 0.23^{***}.Latitude\: -0.001^{***}. Elevation  $$
Be careful here, for a factor, there is a level call “the baseline” which mean that its coefficient is 0. It is the reference level. 

### Model explanation

In generalized linear models, there is no R2, so we need to calculate a pseudo R2 with the distance between the null model deviance and the residual deviance of the model with this formula: 
$$Pseudo\:R^2=100\:.\:\frac{Null\:Deviance- Residual\:Deviance}{Null\:Deviance}$$ 

Let’s do it with R : 

```{r}
# Pseudo R2 calculation 
(mod1$null.deviance-mod1$deviance)/mod1$null.deviance

# We can have other pseudo R2 with the package 'rcompanion'
nagelkerke(mod1)
```

So here, the model explains 60.4% of the deviance, but with the others estimate, we found the model explain about 75% of the deviance. 
Now, it is necessary to check the assumptions of the model to validate. See the part dedicated to this at the end.

3) Loi négative binômiale #Léa
4) Validation des modèles #Clément

Conclusion #Sarah

Remarques :
-ici on ne parle pas de partie Exploration des données
-on ne parle pas de Gamma mais il faudra la mentionner (signaler qu'elle existe mais pas dans le programme M2)

Consignes suppl :
-didactique -> phrases courtes, claires, une phrase = une idée
-25 pages max